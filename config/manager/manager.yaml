apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: manager
    app.kubernetes.io/name: github-token-manager
    app.kubernetes.io/instance: system
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: github-token-manager
    app.kubernetes.io/part-of: github-token-manager
    app.kubernetes.io/managed-by: kustomize
  name: system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: manager
  namespace: system
  labels:
    control-plane: manager
    app.kubernetes.io/name: github-token-manager
    app.kubernetes.io/instance: manager
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: github-token-manager
    app.kubernetes.io/part-of: github-token-manager
    app.kubernetes.io/managed-by: kustomize
spec:
  selector:
    matchLabels:
      control-plane: manager
  replicas: 1
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: manager
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
                      - arm64
                  - key: kubernetes.io/os
                    operator: In
                    values:
                      - linux
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: manager
          image: controller:latest
          args:
            - --leader-elect
            - --health-probe-bind-address=:8081
          ports: []
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - "ALL"
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          # TODO(user): Configure the resources accordingly based on the project requirements.
          # More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 50m
              memory: 64Mi
          volumeMounts:
            - name: config
              mountPath: /config
              readOnly: true
      serviceAccountName: manager
      terminationGracePeriodSeconds: 10
      volumes:
        - name: config
          secret:
            defaultMode: 444
            secretName: gtm-config
